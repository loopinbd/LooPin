import React, { useEffect, useState, useContext } from "react";
import PageWrapper from "../components/PageWrapper";
import SupportChat from "../components/SupportChat";
import "../styles/support.css";
import { db } from "../firebase";
import {
Â  addDoc,
Â  collection,
Â  query,
Â  where,
Â  onSnapshot,
Â  orderBy,
Â  serverTimestamp,
} from "firebase/firestore";
import { AuthContext } from "../context/AuthContext";

const Support = () => {
Â  const { currentUser } = useContext(AuthContext);
Â  const [messages, setMessages] = useState([]);
Â  const [newMessage, setNewMessage] = useState("");
Â  const [sending, setSending] = useState(false);

Â  useEffect(() => {
Â  Â  if (!currentUser) return;

Â  Â  const q = query(
Â  Â  Â  collection(db, "supportMessages"),
Â  Â  Â  where("userId", "==", currentUser.uid),
Â  Â  Â  orderBy("createdAt", "asc")
Â  Â  );

Â  Â  const unsubscribe = onSnapshot(q, (snapshot) => {
Â  Â  Â  const msgs = snapshot.docs.map((doc) => {
Â  Â  Â  Â  const data = doc.data();
Â  Â  Â  Â  return {
Â  Â  Â  Â  Â  content: data.content || "",
Â  Â  Â  Â  Â  reply: data.reply || "",
Â  Â  Â  Â  };
Â  Â  Â  });

Â  Â  Â  console.log("ðŸ“¥ Fetched support messages:", msgs);
Â  Â  Â  setMessages(msgs);
Â  Â  });

Â  Â  return () => unsubscribe();
Â  }, [currentUser]);

Â  const sendMessage = async () => {
Â  Â  if (!newMessage.trim()) return;
Â  Â  if (sending || !currentUser) return;

Â  Â  setSending(true);

Â  Â  try {
Â  Â  Â  await addDoc(collection(db, "support
